<!DOCTYPE html>
<!-- saved from url=(0057)file:///Users/lukasz/Downloads/python_sql/sql-slides.html -->
<html lang="en" class="js flexbox canvas canvastext webgl no-touch geolocation postmessage websqldatabase indexeddb hashchange history draganddrop websockets rgba hsla multiplebgs backgroundsize borderimage borderradius boxshadow textshadow opacity cssanimations csscolumns cssgradients cssreflections csstransforms csstransforms3d csstransitions fontface generatedcontent video audio localstorage sessionstorage webworkers applicationcache svg inlinesvg smil svgclippaths ready"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<meta content="IE=edge,chrome=1" http-equiv="X-UA-Compatible">
<meta content="Asciidoctor 1.5.5" name="generator">
<meta content="Michał Gałka" name="author">
<title>Relacyjne bazy danych i SQL</title>
<style>
/* Stylesheet for CodeRay to match GitHub theme | MIT License | http://foundation.zurb.com */
/*pre.CodeRay {background-color:#f7f7f8;}*/
.CodeRay .line-numbers{border-right:1px solid #d8d8d8;padding:0 0.5em 0 .25em}
.CodeRay span.line-numbers{display:inline-block;margin-right:.5em;color:rgba(0,0,0,.3)}
.CodeRay .line-numbers strong{color:rgba(0,0,0,.4)}
table.CodeRay{border-collapse:separate;border-spacing:0;margin-bottom:0;border:0;background:none}
table.CodeRay td{vertical-align: top;line-height:1.45}
table.CodeRay td.line-numbers{text-align:right}
table.CodeRay td.line-numbers>pre{padding:0;color:rgba(0,0,0,.3)}
table.CodeRay td.code{padding:0 0 0 .5em}
table.CodeRay td.code>pre{padding:0}
.CodeRay .debug{color:#fff !important;background:#000080 !important}
.CodeRay .annotation{color:#007}
.CodeRay .attribute-name{color:#000080}
.CodeRay .attribute-value{color:#700}
.CodeRay .binary{color:#509}
.CodeRay .comment{color:#998;font-style:italic}
.CodeRay .char{color:#04d}
.CodeRay .char .content{color:#04d}
.CodeRay .char .delimiter{color:#039}
.CodeRay .class{color:#458;font-weight:bold}
.CodeRay .complex{color:#a08}
.CodeRay .constant,.CodeRay .predefined-constant{color:#008080}
.CodeRay .color{color:#099}
.CodeRay .class-variable{color:#369}
.CodeRay .decorator{color:#b0b}
.CodeRay .definition{color:#099}
.CodeRay .delimiter{color:#000}
.CodeRay .doc{color:#970}
.CodeRay .doctype{color:#34b}
.CodeRay .doc-string{color:#d42}
.CodeRay .escape{color:#666}
.CodeRay .entity{color:#800}
.CodeRay .error{color:#808}
.CodeRay .exception{color:inherit}
.CodeRay .filename{color:#099}
.CodeRay .function{color:#900;font-weight:bold}
.CodeRay .global-variable{color:#008080}
.CodeRay .hex{color:#058}
.CodeRay .integer,.CodeRay .float{color:#099}
.CodeRay .include{color:#555}
.CodeRay .inline{color:#000}
.CodeRay .inline .inline{background:#ccc}
.CodeRay .inline .inline .inline{background:#bbb}
.CodeRay .inline .inline-delimiter{color:#d14}
.CodeRay .inline-delimiter{color:#d14}
.CodeRay .important{color:#555;font-weight:bold}
.CodeRay .interpreted{color:#b2b}
.CodeRay .instance-variable{color:#008080}
.CodeRay .label{color:#970}
.CodeRay .local-variable{color:#963}
.CodeRay .octal{color:#40e}
.CodeRay .predefined{color:#369}
.CodeRay .preprocessor{color:#579}
.CodeRay .pseudo-class{color:#555}
.CodeRay .directive{font-weight:bold}
.CodeRay .type{font-weight:bold}
.CodeRay .predefined-type{color:inherit}
.CodeRay .reserved,.CodeRay .keyword {color:#000;font-weight:bold}
.CodeRay .key{color:#808}
.CodeRay .key .delimiter{color:#606}
.CodeRay .key .char{color:#80f}
.CodeRay .value{color:#088}
.CodeRay .regexp .delimiter{color:#808}
.CodeRay .regexp .content{color:#808}
.CodeRay .regexp .modifier{color:#808}
.CodeRay .regexp .char{color:#d14}
.CodeRay .regexp .function{color:#404;font-weight:bold}
.CodeRay .string{color:#d20}
.CodeRay .string .string .string{background:#ffd0d0}
.CodeRay .string .content{color:#d14}
.CodeRay .string .char{color:#d14}
.CodeRay .string .delimiter{color:#d14}
.CodeRay .shell{color:#d14}
.CodeRay .shell .delimiter{color:#d14}
.CodeRay .symbol{color:#990073}
.CodeRay .symbol .content{color:#a60}
.CodeRay .symbol .delimiter{color:#630}
.CodeRay .tag{color:#008080}
.CodeRay .tag-special{color:#d70}
.CodeRay .variable{color:#036}
.CodeRay .insert{background:#afa}
.CodeRay .delete{background:#faa}
.CodeRay .change{color:#aaf;background:#007}
.CodeRay .head{color:#f8f;background:#505}
.CodeRay .insert .insert{color:#080}
.CodeRay .delete .delete{color:#800}
.CodeRay .change .change{color:#66f}
.CodeRay .head .head{color:#f4f}
</style>
<link href="./deck.core.css" rel="stylesheet">
<link href="./deck.scale.css" media="screen" rel="stylesheet">
<link href="./deck.goto.css" media="screen" rel="stylesheet">
<link href="./deck.menu.css" media="screen" rel="stylesheet">
<link href="./deck.status.css" media="screen" rel="stylesheet">
<link href="./swiss.css" media="screen" rel="stylesheet">
<link href="./horizontal-slide.css" media="screen" rel="stylesheet">
<link href="./print.css" media="print" rel="stylesheet">
<script src="./modernizr.custom.js"></script>
</head>
<body class="article">
<div class="deck-container on-slide-title-slide on-slide-0 deck-scale">
<section class="slide deck-current" id="title-slide" aria-hidden="false">
<div class="deck-slide-scaler"><h1>Relacyjne bazy danych i SQL</h1><span id="author">Michał Gałka</span><br></div>


</section>
<section class="slide deck-next" id="_relacyjne_bazy_danych" aria-hidden="true">
<div class="deck-slide-scaler"><h2>Relacyjne bazy danych</h2><div class="ulist">
<div class="title">Relacyjne bazy danych</div>
<ul>
<li class="slide deck-after" id="slide-2" aria-hidden="true">RDBMS (Relational Database Management System)</li>
<li class="slide deck-after" id="slide-3" aria-hidden="true">System baz danych oparty na modelu relacyjnym (E.F. Codd)</li>
<li class="slide deck-after" id="slide-4" aria-hidden="true">Podstawą relacyjnego modelu danych jest <strong>tabela</strong> (ang. table).</li>
</ul>
</div></div>

</section>
<section class="slide deck-after" id="_acid" aria-hidden="true">
<div class="deck-slide-scaler"><h2>ACID</h2><div class="ulist">
<ul>
<li class="slide deck-after" id="slide-6" aria-hidden="true">Skrótowiec od angielskich słów (<strong>A</strong>tomicity, <strong>C</strong>onsistency, <strong>I</strong>solation, <strong>D</strong>urability)</li>
<li class="slide deck-after" id="slide-7" aria-hidden="true">Niepodzielność - transakcje są przeprowadzane w całości, albo wcale.</li>
<li class="slide deck-after" id="slide-8" aria-hidden="true">Spójność - Po wykonaniu zapytania spełnione są zasady integralności systemu.</li>
<li class="slide deck-after" id="slide-9" aria-hidden="true"><p>
Izolacja - Jeśli dwie transakcje działają współbieżnie to mogą nie widzieć wprowadzanych przez siebie zmian.</p><div class="ulist">
<ul>
<li>Definiowane są poziomy izolacji, które mówią jakie anomalie są dopuszczalne w systemie.</li>
</ul>
</div><p></p></li>
<li class="slide deck-after" id="slide-10" aria-hidden="true">Trwałość - system jest w stanie uruchomić się i udostępnić spójne, aktualne i nienaruszone dane po awarii.</li>
</ul>
</div></div>

</section>
<section class="slide deck-after" id="_tabele" aria-hidden="true">
<div class="deck-slide-scaler" style="transform: scale(0.737297);"><h2>Tabele</h2><div class="ulist">
<div class="title">Czym jet tabela?</div>
<ul>
<li class="slide deck-after" id="slide-12" aria-hidden="true">Zbiór powiązanych ze sobą danych podzielonych na kolumny i wiersze.</li>
<li class="slide deck-after" id="slide-13" aria-hidden="true">Najbardziej podstawowa forma przechowywania danych w bazie relacyjnej.</li>
<li class="slide deck-after" id="slide-14" aria-hidden="true">Każda tabela posiada nazwę unikalną w obrębie bazy danych.</li>
</ul>
</div><div class="openblock slide deck-after" id="slide-15" aria-hidden="true">
<div class="content">
<div class="listingblock">
<div class="content">
<pre class="CodeRay"><code>+----+------------+----------------+----------+--------------+
| id | first_name | last_name      | city     | mobile_phone |
+----+------------+----------------+----------+--------------+
|  1 | Nancy      | Freehafer      | Seattle  | NULL         |
|  2 | Andrew     | Cencini        | Bellevue | NULL         |
|  3 | Jan        | Kotas          | Redmond  | NULL         |
|  4 | Mariya     | Sergienko      | Kirkland | NULL         |
|  5 | Steven     | Thorpe         | Seattle  | NULL         |
|  6 | Michael    | Neipper        | Redmond  | NULL         |
|  7 | Robert     | Zare           | Seattle  | NULL         |
|  8 | Laura      | Giussani       | Redmond  | NULL         |
|  9 | Anne       | Hellung-Larsen | Seattle  | NULL         |
+----+------------+----------------+----------+--------------+</code></pre>
</div>
</div>
</div>
</div></div>


</section>
<section class="slide deck-after" id="_klucz_główny_i_klucze_obce" aria-hidden="true">
<div class="deck-slide-scaler"><h2>Klucz główny i klucze obce</h2><div class="imageblock" style="text-align: center">
<div class="content">
<img alt="PK FK" src="file:///Users/lukasz/Downloads/python_sql/images/PK_FK.png">
</div>
</div><div class="ulist">
<ul>
<li class="slide deck-after" id="slide-17" aria-hidden="true">Relacje pomiędzy tabelami definiowane są przez klucze główne i klucze obce.</li>
<li class="slide deck-after" id="slide-18" aria-hidden="true">Klucz główny (ang. Primary Key) jednoznacznie definiuje każdy wiersz w tabeli.</li>
<li class="slide deck-after" id="slide-19" aria-hidden="true">Klucz główny może składać się z jednej lub większej ilości kolumn.</li>
<li class="slide deck-after" id="slide-20" aria-hidden="true">Klucz główny nie może zawierać wartości <code>NULL</code>.</li>
<li class="slide deck-after" id="slide-21" aria-hidden="true">Najczęściej jest kolumną typu AUTO INCREMENT.</li>
</ul>
</div></div>


</section>
<section class="slide deck-after" id="_klucz_główny_i_klucze_obce_2" aria-hidden="true">
<div class="deck-slide-scaler"><h2>Klucz główny i klucze obce</h2><div class="imageblock" style="text-align: center">
<div class="content">
<img alt="PK FK" src="file:///Users/lukasz/Downloads/python_sql/images/PK_FK.png">
</div>
</div><div class="ulist">
<ul>
<li class="slide deck-after" id="slide-23" aria-hidden="true">Klucz obcy definiuje relację pomiędzy dwiema tabelami w bazie.</li>
<li class="slide deck-after" id="slide-24" aria-hidden="true">Klucz obcy definiuje kolumnę, lub zbiór kolumn, które wskazują jednoznacznie kolumnę lub zbiór kolumn w innej tabeli.</li>
<li class="slide deck-after" id="slide-25" aria-hidden="true">Jeden wiersz w tabeli wskazującej musi odpowiadać jednemu wierszowi w tabeli wskazywanej.</li>
<li class="slide deck-after" id="slide-26" aria-hidden="true">Wiele wierszy w tabli wskazującej może wskazywać na ten sam wiersz w tabeli wskazywanej.</li>
</ul>
</div></div>


</section>
<section class="slide deck-after" id="_wiersze_kolumny_pola" aria-hidden="true">
<div class="deck-slide-scaler" style="transform: scale(0.977077);"><h2>Wiersze, kolumny, pola</h2><div class="ulist">
<div class="title">Tabela jest podzielona na <strong>wiersze</strong>.</div>
<ul>
<li class="slide deck-after" id="slide-28" aria-hidden="true">Każdy wiersz (nazywany czasem rekordem) zawiera wszystkie dane z jednego wpisu do bazy.</li>
</ul>
</div><div class="ulist">
<div class="title">Każdy wiersz składa się z <strong>pól</strong>.</div>
<ul>
<li class="slide deck-after" id="slide-29" aria-hidden="true">Pole zawiera pewną konkretną informację n.t. rekordu w bazie danych.</li>
<li class="slide deck-after" id="slide-30" aria-hidden="true">W naszym wypadku polami są: <code>first_name</code>, <code>last_name</code>, <code>city</code>, <code>mobile_phone</code></li>
<li class="slide deck-after" id="slide-31" aria-hidden="true">Jeśli pole nie posiada wartości to zawiera specjalną wartość <code>NULL</code>.</li>
<li class="slide deck-after" id="slide-32" aria-hidden="true">Każde pole posiada zdefiniowany typ danych, które przechowuje.</li>
</ul>
</div><div class="ulist">
<div class="title"><strong>Kolumna</strong> zawiera dane związane z określonym polem.</div>
<ul>
<li class="slide deck-after" id="slide-33" aria-hidden="true">Np. Kolumna <code>first_name</code> zawiera wszystkie imiona pracowników.</li>
</ul>
</div></div>



</section>
<section class="slide deck-after" id="_model_bazy_danych" aria-hidden="true">
<div class="deck-slide-scaler"><h2>Model bazy danych</h2><div class="imageblock" style="text-align: center">
<div class="content">
<img alt="northwind erd" src="file:///Users/lukasz/Downloads/python_sql/images/northwind-erd.png">
</div>
</div></div>

</section>
<section class="slide deck-after" id="_sql" aria-hidden="true">
<div class="deck-slide-scaler"><h2>SQL</h2><div class="ulist">
<div class="title">SQL</div>
<ul>
<li class="slide deck-after" id="slide-36" aria-hidden="true">Structured Query Language</li>
<li class="slide deck-after" id="slide-37" aria-hidden="true">Język służący do tworzenia i manipulacji danymi.</li>
<li class="slide deck-after" id="slide-38" aria-hidden="true">Używany jako standard przez wszystkie relacyjne bazy danych.</li>
<li class="slide deck-after" id="slide-39" aria-hidden="true"><strong>Dialekty SQL różnią się w pewnych szczegółach pomiędzy różnymi silnikami baz danych.</strong></li>
</ul>
</div></div>

</section>
<section class="slide deck-after" id="_sql_2" aria-hidden="true">
<div class="deck-slide-scaler"><h2>SQL</h2><div class="ulist">
<div class="title">Jakie możliwości ma SQL?</div>
<ul>
<li class="slide deck-after" id="slide-41" aria-hidden="true">Dostęp do danych w relacyjnych bazach danych.</li>
<li class="slide deck-after" id="slide-42" aria-hidden="true">Opisywanie danych przechowywanych w bazie.</li>
<li class="slide deck-after" id="slide-43" aria-hidden="true">Manipulacja danymi w bazie.</li>
<li class="slide deck-after" id="slide-44" aria-hidden="true">Tworzenie i usuwanie baz danych i tabel.</li>
<li class="slide deck-after" id="slide-45" aria-hidden="true">Zarządzanie uprawnieniami użytkowników.</li>
<li class="slide deck-after" id="slide-46" aria-hidden="true">Pozwala na zagnieżdżanie go w innych językach programowania.</li>
</ul>
</div></div>

</section>
<section class="slide deck-after" id="_składnia_języka_sql" aria-hidden="true">
<div class="deck-slide-scaler" style="transform: scale(0.861111);"><h2>Składnia języka SQL</h2><div class="ulist">
<ul>
<li class="slide deck-after" id="slide-48" aria-hidden="true">Język SQL został zaprojektowany tak, aby jego instrukcje przypominały zdania napisane w języku angielskim.</li>
<li class="slide deck-after" id="slide-49" aria-hidden="true"><p>
Pierwotnie przewidziany był do wydawania komend w konsoli w trybie interaktywnym:</p><div class="ulist">
<ul>
<li>Użytkownik wpisuje komendę.</li>
<li>Dane zostają wyświetlone na ekranie.</li>
<li>itd.</li>
</ul>
</div><p></p></li>
<li class="slide deck-after" id="slide-50" aria-hidden="true">Przykładowe słowa kluczowe języka SQL: <code>SELECT</code>, <code>UPDATE</code>, <code>WHERE</code>, <code>INSERT</code>.</li>
<li class="slide deck-after" id="slide-51" aria-hidden="true"><p>
Język SQL nie rozróżnia wielkich i małych liter w słowach kluczowych</p><div class="ulist">
<ul>
<li>Konwencją jest używanie wielkich liter.</li>
<li>Wielkość liter może mieć znaczenie przy nazwach tabel, kolumn, widoków itd.</li>
</ul>
</div><p></p></li>
</ul>
</div></div>

</section>
<section class="slide deck-after" id="_składnia_języka_sql_2" aria-hidden="true">
<div class="deck-slide-scaler"><h2>Składnia języka SQL</h2><div class="ulist">
<ul>
<li>Niektóre systemy zarządzania bazami danych wymagają średnika (;) na końcu każdej komendy.</li>
<li>Średnik służy też do rozdzielania instrukcji, kiedy chcemy wykonać więcej niż jedną operację w jednym zapytaniu.</li>
</ul>
</div></div>

</section>
<section class="slide deck-after" id="_składnia_języka_sql_3" aria-hidden="true">
<div class="deck-slide-scaler"><h2>Składnia języka SQL</h2><div class="listingblock">
<div class="content">
<pre class="CodeRay"><code class="sql language-sql"><span class="class">SELECT</span> first_name, last_name, business_phone <span class="keyword">FROM</span> customers;</code></pre>
</div>
</div><div class="listingblock">
<div class="content">
<pre class="CodeRay"><code class="sql language-sql"><span class="class">SELECT</span> * <span class="keyword">FROM</span> products;</code></pre>
</div>
</div><div class="listingblock">
<div class="content">
<pre class="CodeRay"><code class="sql language-sql"><span class="class">UPDATE</span> employees <span class="class">SET</span> email_address = <span class="string"><span class="delimiter">'</span><span class="content">m.galka@sages.io</span><span class="delimiter">'</span></span> <span class="keyword">WHERE</span> id = <span class="integer">1</span>;</code></pre>
</div>
</div></div>



</section>
<section class="slide deck-after" id="_ddl_i_dml" aria-hidden="true">
<div class="deck-slide-scaler"><h2>DDL i DML</h2><div class="ulist">
<ul>
<li class="slide deck-after" id="slide-55" aria-hidden="true"><p>
DDL - Data Definition Language</p><div class="ulist">
<ul>
<li>Część języka SQL używana do tworzenia i edycji struktury bazy danych.</li>
</ul>
</div><p></p></li>
<li class="slide deck-after" id="slide-56" aria-hidden="true"><p>
DML - Data Manipulation Language</p><div class="ulist">
<ul>
<li>Część języka SQL używana do operacji na danych.</li>
</ul>
</div><p></p></li>
</ul>
</div></div>

</section>
<section class="slide deck-after" id="_język_definicji_danych_ddl" aria-hidden="true">
<div class="deck-slide-scaler"><h2>Język definicji danych (DDL)</h2><div class="ulist">
<ul>
<li class="slide deck-after" id="slide-58" aria-hidden="true"><p>
W SQL składa się z instrukcji:</p><div class="ulist">
<ul>
<li>CREATE - tworzy struktury w bazie danych.</li>
<li>ALTER - zmienia strukturę bazy danych.</li>
<li>DROP - usuwa elementy bazy danych.</li>
</ul>
</div><p></p></li>
</ul>
</div></div>

</section>
<section class="slide deck-after" id="_tworzenie_i_usuwanie_bazy_danych" aria-hidden="true">
<div class="deck-slide-scaler"><h2>Tworzenie i usuwanie bazy danych</h2><div class="openblock slide deck-after" id="slide-60" aria-hidden="true">
<div class="content">
<div class="listingblock">
<div class="content">
<pre class="CodeRay"><code class="sql language-sql"><span class="class">CREATE</span> <span class="type">DATABASE</span> my_database;</code></pre>
</div>
</div>
</div>
</div><div class="ulist">
<ul>
<li class="slide deck-after" id="slide-61" aria-hidden="true">Tworzy bazę danych o podanej nazwie</li>
</ul>
</div><div class="openblock">
<div class="content">
<div class="listingblock">
<div class="content">
<pre class="CodeRay"><code class="sql language-sql"><span class="class">DROP</span> <span class="type">DATABASE</span> my_database;</code></pre>
</div>
</div>
</div>
</div><div class="ulist">
<ul>
<li class="slide deck-after" id="slide-62" aria-hidden="true">Usuwa bazę danych o podanej nazwie</li>
</ul>
</div></div>




</section>
<section class="slide deck-after" id="_tworzenie_tabel" aria-hidden="true">
<div class="deck-slide-scaler" style="transform: scale(0.970128);"><h2>Tworzenie tabel</h2><div class="listingblock">
<div class="content">
<pre class="CodeRay"><code class="sql language-sql"><span class="class">CREATE</span> <span class="type">TABLE</span> table_name(
   column1 datatype,
   column2 datatype,
   column3 datatype,
   .....
   columnN datatype,
   <span class="directive">PRIMARY</span> <span class="type">KEY</span>( one <span class="keyword">or</span> more <span class="type">columns</span> )
);</code></pre>
</div>
</div><div class="ulist">
<ul>
<li class="slide deck-after" id="slide-64" aria-hidden="true">Do tworzenia tabel służy instrukcja <code>CREATE TABLE</code></li>
<li class="slide deck-after" id="slide-65" aria-hidden="true">Każda zdefiniowana kolumna musi mieć jednoznacznie określony typ danych, który przechowuje.</li>
</ul>
</div></div>


</section>
<section class="slide deck-after" id="_tworzenie_tabel_przykład" aria-hidden="true">
<div class="deck-slide-scaler" style="transform: scale(0.55);"><h2>Tworzenie tabel - przykład</h2><div class="listingblock">
<div class="content">
<pre class="CodeRay"><code class="sql language-sql"><span class="class">CREATE</span> <span class="type">TABLE</span> <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> <span class="string"><span class="delimiter">`</span><span class="content">northwind</span><span class="delimiter">`</span></span>.<span class="string"><span class="delimiter">`</span><span class="content">employees</span><span class="delimiter">`</span></span> (
  <span class="string"><span class="delimiter">`</span><span class="content">id</span><span class="delimiter">`</span></span> <span class="predefined-type">INT</span>(<span class="integer">11</span>) <span class="keyword">NOT</span> <span class="predefined-constant">NULL</span> <span class="directive">AUTO_INCREMENT</span>,
  <span class="string"><span class="delimiter">`</span><span class="content">company</span><span class="delimiter">`</span></span> <span class="predefined-type">VARCHAR</span>(<span class="integer">50</span>) <span class="predefined-constant">NULL</span> <span class="directive">DEFAULT</span> <span class="predefined-constant">NULL</span>,
  <span class="string"><span class="delimiter">`</span><span class="content">last_name</span><span class="delimiter">`</span></span> <span class="predefined-type">VARCHAR</span>(<span class="integer">50</span>) <span class="predefined-constant">NULL</span> <span class="directive">DEFAULT</span> <span class="predefined-constant">NULL</span>,
  <span class="string"><span class="delimiter">`</span><span class="content">first_name</span><span class="delimiter">`</span></span> <span class="predefined-type">VARCHAR</span>(<span class="integer">50</span>) <span class="predefined-constant">NULL</span> <span class="directive">DEFAULT</span> <span class="predefined-constant">NULL</span>,
  <span class="string"><span class="delimiter">`</span><span class="content">email_address</span><span class="delimiter">`</span></span> <span class="predefined-type">VARCHAR</span>(<span class="integer">50</span>) <span class="predefined-constant">NULL</span> <span class="directive">DEFAULT</span> <span class="predefined-constant">NULL</span>,
  <span class="string"><span class="delimiter">`</span><span class="content">job_title</span><span class="delimiter">`</span></span> <span class="predefined-type">VARCHAR</span>(<span class="integer">50</span>) <span class="predefined-constant">NULL</span> <span class="directive">DEFAULT</span> <span class="predefined-constant">NULL</span>,
  <span class="string"><span class="delimiter">`</span><span class="content">business_phone</span><span class="delimiter">`</span></span> <span class="predefined-type">VARCHAR</span>(<span class="integer">25</span>) <span class="predefined-constant">NULL</span> <span class="directive">DEFAULT</span> <span class="predefined-constant">NULL</span>,
  <span class="string"><span class="delimiter">`</span><span class="content">home_phone</span><span class="delimiter">`</span></span> <span class="predefined-type">VARCHAR</span>(<span class="integer">25</span>) <span class="predefined-constant">NULL</span> <span class="directive">DEFAULT</span> <span class="predefined-constant">NULL</span>,
  <span class="string"><span class="delimiter">`</span><span class="content">mobile_phone</span><span class="delimiter">`</span></span> <span class="predefined-type">VARCHAR</span>(<span class="integer">25</span>) <span class="predefined-constant">NULL</span> <span class="directive">DEFAULT</span> <span class="predefined-constant">NULL</span>,
  <span class="string"><span class="delimiter">`</span><span class="content">fax_number</span><span class="delimiter">`</span></span> <span class="predefined-type">VARCHAR</span>(<span class="integer">25</span>) <span class="predefined-constant">NULL</span> <span class="directive">DEFAULT</span> <span class="predefined-constant">NULL</span>,
  <span class="string"><span class="delimiter">`</span><span class="content">address</span><span class="delimiter">`</span></span> <span class="predefined-type">LONGTEXT</span> <span class="predefined-constant">NULL</span> <span class="directive">DEFAULT</span> <span class="predefined-constant">NULL</span>,
  <span class="string"><span class="delimiter">`</span><span class="content">city</span><span class="delimiter">`</span></span> <span class="predefined-type">VARCHAR</span>(<span class="integer">50</span>) <span class="predefined-constant">NULL</span> <span class="directive">DEFAULT</span> <span class="predefined-constant">NULL</span>,
  <span class="string"><span class="delimiter">`</span><span class="content">state_province</span><span class="delimiter">`</span></span> <span class="predefined-type">VARCHAR</span>(<span class="integer">50</span>) <span class="predefined-constant">NULL</span> <span class="directive">DEFAULT</span> <span class="predefined-constant">NULL</span>,
  <span class="string"><span class="delimiter">`</span><span class="content">zip_postal_code</span><span class="delimiter">`</span></span> <span class="predefined-type">VARCHAR</span>(<span class="integer">15</span>) <span class="predefined-constant">NULL</span> <span class="directive">DEFAULT</span> <span class="predefined-constant">NULL</span>,
  <span class="string"><span class="delimiter">`</span><span class="content">country_region</span><span class="delimiter">`</span></span> <span class="predefined-type">VARCHAR</span>(<span class="integer">50</span>) <span class="predefined-constant">NULL</span> <span class="directive">DEFAULT</span> <span class="predefined-constant">NULL</span>,
  <span class="string"><span class="delimiter">`</span><span class="content">web_page</span><span class="delimiter">`</span></span> <span class="predefined-type">LONGTEXT</span> <span class="predefined-constant">NULL</span> <span class="directive">DEFAULT</span> <span class="predefined-constant">NULL</span>,
  <span class="string"><span class="delimiter">`</span><span class="content">notes</span><span class="delimiter">`</span></span> <span class="predefined-type">LONGTEXT</span> <span class="predefined-constant">NULL</span> <span class="directive">DEFAULT</span> <span class="predefined-constant">NULL</span>,
  <span class="string"><span class="delimiter">`</span><span class="content">attachments</span><span class="delimiter">`</span></span> <span class="predefined-type">LONGBLOB</span> <span class="predefined-constant">NULL</span> <span class="directive">DEFAULT</span> <span class="predefined-constant">NULL</span>,
  <span class="directive">PRIMARY</span> <span class="type">KEY</span> (<span class="string"><span class="delimiter">`</span><span class="content">id</span><span class="delimiter">`</span></span>);
  <span class="type">INDEX</span> <span class="string"><span class="delimiter">`</span><span class="content">city</span><span class="delimiter">`</span></span> (<span class="string"><span class="delimiter">`</span><span class="content">city</span><span class="delimiter">`</span></span> <span class="directive">ASC</span>),
  <span class="type">INDEX</span> <span class="string"><span class="delimiter">`</span><span class="content">company</span><span class="delimiter">`</span></span> (<span class="string"><span class="delimiter">`</span><span class="content">company</span><span class="delimiter">`</span></span> <span class="directive">ASC</span>),
  <span class="type">INDEX</span> <span class="string"><span class="delimiter">`</span><span class="content">first_name</span><span class="delimiter">`</span></span> (<span class="string"><span class="delimiter">`</span><span class="content">first_name</span><span class="delimiter">`</span></span> <span class="directive">ASC</span>),
  <span class="type">INDEX</span> <span class="string"><span class="delimiter">`</span><span class="content">last_name</span><span class="delimiter">`</span></span> (<span class="string"><span class="delimiter">`</span><span class="content">last_name</span><span class="delimiter">`</span></span> <span class="directive">ASC</span>),
  <span class="type">INDEX</span> <span class="string"><span class="delimiter">`</span><span class="content">zip_postal_code</span><span class="delimiter">`</span></span> (<span class="string"><span class="delimiter">`</span><span class="content">zip_postal_code</span><span class="delimiter">`</span></span> <span class="directive">ASC</span>),
  <span class="type">INDEX</span> <span class="string"><span class="delimiter">`</span><span class="content">state_province</span><span class="delimiter">`</span></span> (<span class="string"><span class="delimiter">`</span><span class="content">state_province</span><span class="delimiter">`</span></span> <span class="directive">ASC</span>))
<span class="directive">ENGINE</span> = InnoDB
<span class="directive">DEFAULT</span> CHARACTER <span class="class">SET</span> = utf8;</code></pre>
</div>
</div></div>

</section>
<section class="slide deck-after" id="_tworzenie_tabel_przykład_2" aria-hidden="true">
<div class="deck-slide-scaler" style="transform: scale(0.737297);"><h2>Tworzenie tabel - przykład</h2><div class="listingblock">
<div class="content">
<pre class="CodeRay"><code class="sql language-sql"><span class="class">CREATE</span> <span class="type">TABLE</span> <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> <span class="string"><span class="delimiter">`</span><span class="content">northwind</span><span class="delimiter">`</span></span>.<span class="string"><span class="delimiter">`</span><span class="content">employee_privileges</span><span class="delimiter">`</span></span> (
  <span class="string"><span class="delimiter">`</span><span class="content">employee_id</span><span class="delimiter">`</span></span> <span class="predefined-type">INT</span>(<span class="integer">11</span>) <span class="keyword">NOT</span> <span class="predefined-constant">NULL</span>,
  <span class="string"><span class="delimiter">`</span><span class="content">privilege_id</span><span class="delimiter">`</span></span> <span class="predefined-type">INT</span>(<span class="integer">11</span>) <span class="keyword">NOT</span> <span class="predefined-constant">NULL</span>,
  <span class="directive">PRIMARY</span> <span class="type">KEY</span> (<span class="string"><span class="delimiter">`</span><span class="content">employee_id</span><span class="delimiter">`</span></span>, <span class="string"><span class="delimiter">`</span><span class="content">privilege_id</span><span class="delimiter">`</span></span>),
  <span class="type">INDEX</span> <span class="string"><span class="delimiter">`</span><span class="content">employee_id</span><span class="delimiter">`</span></span> (<span class="string"><span class="delimiter">`</span><span class="content">employee_id</span><span class="delimiter">`</span></span> <span class="directive">ASC</span>),
  <span class="type">INDEX</span> <span class="string"><span class="delimiter">`</span><span class="content">privilege_id</span><span class="delimiter">`</span></span> (<span class="string"><span class="delimiter">`</span><span class="content">privilege_id</span><span class="delimiter">`</span></span> <span class="directive">ASC</span>),
  <span class="type">INDEX</span> <span class="string"><span class="delimiter">`</span><span class="content">privilege_id_2</span><span class="delimiter">`</span></span> (<span class="string"><span class="delimiter">`</span><span class="content">privilege_id</span><span class="delimiter">`</span></span> <span class="directive">ASC</span>),
  <span class="type">CONSTRAINT</span> <span class="string"><span class="delimiter">`</span><span class="content">fk_employee_privileges_employees1</span><span class="delimiter">`</span></span>
    <span class="directive">FOREIGN</span> <span class="type">KEY</span> (<span class="string"><span class="delimiter">`</span><span class="content">employee_id</span><span class="delimiter">`</span></span>)
    <span class="keyword">REFERENCES</span> <span class="string"><span class="delimiter">`</span><span class="content">northwind</span><span class="delimiter">`</span></span>.<span class="string"><span class="delimiter">`</span><span class="content">employees</span><span class="delimiter">`</span></span> (<span class="string"><span class="delimiter">`</span><span class="content">id</span><span class="delimiter">`</span></span>)
    <span class="keyword">ON</span> <span class="class">DELETE</span> NO ACTION
    <span class="keyword">ON</span> <span class="class">UPDATE</span> NO ACTION,
  <span class="type">CONSTRAINT</span> <span class="string"><span class="delimiter">`</span><span class="content">fk_employee_privileges_privileges1</span><span class="delimiter">`</span></span>
    <span class="directive">FOREIGN</span> <span class="type">KEY</span> (<span class="string"><span class="delimiter">`</span><span class="content">privilege_id</span><span class="delimiter">`</span></span>)
    <span class="keyword">REFERENCES</span> <span class="string"><span class="delimiter">`</span><span class="content">northwind</span><span class="delimiter">`</span></span>.<span class="string"><span class="delimiter">`</span><span class="content">privileges</span><span class="delimiter">`</span></span> (<span class="string"><span class="delimiter">`</span><span class="content">id</span><span class="delimiter">`</span></span>)
    <span class="keyword">ON</span> <span class="class">DELETE</span> NO ACTION
    <span class="keyword">ON</span> <span class="class">UPDATE</span> NO ACTION)
<span class="directive">ENGINE</span> = InnoDB
<span class="directive">DEFAULT</span> CHARACTER <span class="class">SET</span> = utf8;</code></pre>
</div>
</div></div>

</section>
<section class="slide deck-after" id="_usuwanie_tabel" aria-hidden="true">
<div class="deck-slide-scaler"><h2>Usuwanie tabel</h2><div class="listingblock">
<div class="content">
<pre class="CodeRay"><code class="sql language-sql"><span class="class">DROP</span> <span class="type">TABLE</span> table_name;</code></pre>
</div>
</div><div class="ulist">
<ul>
<li class="slide deck-after" id="slide-69" aria-hidden="true">Usuwa z bazy danych tabelę o podanej nazwie.</li>
</ul>
</div></div>


</section>
<section class="slide deck-after" id="_podstawowe_operacje_na_danych_dml" aria-hidden="true">
<div class="deck-slide-scaler"><h2>Podstawowe operacje na danych (DML)</h2><div class="ulist">
<ul>
<li class="slide deck-after" id="slide-71" aria-hidden="true"><p>
Podstawowe operacje na danych obejmują:</p><div class="ulist">
<ul>
<li>Tworzenie nowych rekordów - <code>INSERT</code></li>
<li>Odczyt danych - <code>SELECT</code></li>
<li>Aktualizację/zmianę danych - <code>UPDATE</code></li>
<li>Usuwanie danych - <code>DELETE</code></li>
</ul>
</div><p></p></li>
<li class="slide deck-after" id="slide-72" aria-hidden="true">Ten zestaw operacji bywa nazywany <strong>CRUD</strong> (<strong>C</strong>reate, <strong>R</strong>ead, <strong>U</strong>pdate, <strong>D</strong>elete)</li>
</ul>
</div></div>

</section>
<section class="slide deck-after" id="_podstawowe_operacje_code_insert_code" aria-hidden="true">
<div class="deck-slide-scaler"><h2>Podstawowe operacje - <code>INSERT</code></h2><div class="listingblock">
<div class="content">
<pre class="CodeRay"><code class="sql language-sql"><span class="class">INSERT</span> table_name (column_names)
<span class="keyword">VALUES</span> (column_values)</code></pre>
</div>
</div><div class="listingblock">
<div class="content">
<pre class="CodeRay"><code class="sql language-sql"><span class="class">INSERT</span> <span class="class">INTO</span> employees (first_name, last_name, email_address) <span class="keyword">VALUES</span> (<span class="string"><span class="delimiter">'</span><span class="content">Jan</span><span class="delimiter">'</span></span>, <span class="string"><span class="delimiter">'</span><span class="content">Kowalski</span><span class="delimiter">'</span></span>, <span class="string"><span class="delimiter">'</span><span class="content">jan@company.com</span><span class="delimiter">'</span></span>);</code></pre>
</div>
</div><div class="ulist">
<ul>
<li class="slide deck-after" id="slide-74" aria-hidden="true">Pozwala na dodawanie nowych wierszy w tabeli.</li>
<li class="slide deck-after" id="slide-75" aria-hidden="true">Wartości do kolumn przypisywane są na podstawie ich pozycji na liście.</li>
</ul>
</div></div>



</section>
<section class="slide deck-after" id="_podstawowe_operacje_code_select_code" aria-hidden="true">
<div class="deck-slide-scaler" style="transform: scale(0.546474);"><h2>Podstawowe operacje - <code>SELECT</code></h2><div class="listingblock">
<div class="content">
<pre class="CodeRay"><code class="sql language-sql"><span class="class">SELECT</span> column_names
<span class="keyword">FROM</span> table_name
<span class="keyword">WHERE</span> condition
<span class="keyword">ORDER</span> <span class="keyword">BY</span> sort_order</code></pre>
</div>
</div><div class="listingblock">
<div class="content">
<pre class="CodeRay"><code class="sql language-sql"><span class="class">SELECT</span> id, web_page, email_address <span class="keyword">FROM</span> employees <span class="keyword">ORDER</span> <span class="keyword">BY</span> email_address <span class="directive">DESC</span>;
<span class="class">SELECT</span> id, web_page, email_address <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span> id = <span class="integer">10</span>;</code></pre>
</div>
</div><div class="ulist">
<ul>
<li class="slide deck-after" id="slide-77" aria-hidden="true"><p>
Pozwala pobrać z bazy rekordy spełniające określone kryteria.</p><div class="ulist">
<ul>
<li>Po słowie kluczowym <code>WHERE</code> występuje warunek, który muszą spełniać pobrane dane.</li>
</ul>
</div><p></p></li>
<li class="slide deck-after" id="slide-78" aria-hidden="true"><p>
Pozwala na sortowanie wyników przy pomocy słowa kluczowego <code>ORDER BY</code> wg. kolumny wymienionej jako argument.</p><div class="ulist">
<ul>
<li>Domyślnie wartości sortowane są w porządku rosnącym.</li>
<li><p>
Można zaznaczyć porządek sortowania jawnie poprzez dodanie odpowiedniej instrukcji po <code>ORDER BY</code>:</p><div class="ulist">
<ul>
<li><code>ASC</code> - sortowanie w porządku rosnącym (domyślnie)</li>
<li><code>DESC</code> - sortowanie w porządku malejącym</li>
</ul>
</div><p></p></li>
</ul>
</div><p></p></li>
</ul>
</div></div>



</section>
<section class="slide deck-after" id="_podstawowe_operacje_code_update_code" aria-hidden="true">
<div class="deck-slide-scaler" style="transform: scale(0.92663);"><h2>Podstawowe operacje - <code>UPDATE</code></h2><div class="listingblock">
<div class="content">
<pre class="CodeRay"><code class="sql language-sql"><span class="class">UPDATE</span> table_name
<span class="class">SET</span> column_name = column_value
<span class="keyword">WHERE</span> condition</code></pre>
</div>
</div><div class="listingblock">
<div class="content">
<pre class="CodeRay"><code class="sql language-sql"><span class="class">UPDATE</span> employees <span class="class">SET</span> first_name = <span class="string"><span class="delimiter">'</span><span class="content">Kazimierz</span><span class="delimiter">'</span></span>, last_name = <span class="string"><span class="delimiter">'</span><span class="content">Nowak</span><span class="delimiter">'</span></span> <span class="keyword">WHERE</span> id = <span class="integer">10</span>;</code></pre>
</div>
</div><div class="ulist">
<ul>
<li class="slide deck-after" id="slide-80" aria-hidden="true">Pozwala na aktualizację danych w tabeli.</li>
<li class="slide deck-after" id="slide-81" aria-hidden="true">Aktualizacja obejmuje wiersze spełniające warunek podany po <code>WHERE</code>.</li>
<li class="slide deck-after" id="slide-82" aria-hidden="true"><strong>Jeśli nie podano żadnego warunku to zaktualizowane zostaną WSZYSTKIE wiersze w tabeli.</strong></li>
</ul>
</div></div>



</section>
<section class="slide deck-after" id="_podstawowe_operacje_code_delete_code" aria-hidden="true">
<div class="deck-slide-scaler"><h2>Podstawowe operacje - <code>DELETE</code></h2><div class="listingblock">
<div class="content">
<pre class="CodeRay"><code class="sql language-sql"><span class="class">DELETE</span> <span class="keyword">FROM</span> table_name
<span class="keyword">WHERE</span> condition</code></pre>
</div>
</div><div class="listingblock">
<div class="content">
<pre class="CodeRay"><code class="sql language-sql"><span class="class">DELETE</span> <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span> first_name = <span class="string"><span class="delimiter">'</span><span class="content">Kazimierz</span><span class="delimiter">'</span></span>;</code></pre>
</div>
</div><div class="ulist">
<ul>
<li class="slide deck-after" id="slide-84" aria-hidden="true">Usuwa z tabeli wiersze spełniające warunek występujący po <code>WHERE</code>.</li>
<li class="slide deck-after" id="slide-85" aria-hidden="true"><strong>Brak podania warunku spowoduje usunięcie WSZYSTKICH wierszy z tabeli.</strong></li>
</ul>
</div></div>



</section>
<section class="slide deck-after" id="_operatory_arytmetyczne" aria-hidden="true">
<div class="deck-slide-scaler"><h2>Operatory arytmetyczne</h2><table class="tableblock frame-all grid-all" style="width:100%">
<colgroup>
<col style="width:50%">
<col style="width:50%">
</colgroup>
<tbody>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">+</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Dodawanie</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">-</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Odejmowanie</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">*</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Mnożenie</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">/</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Dzielenie</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">%</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Modulo</p></td>
</tr>
</tbody>
</table></div>

</section>
<section class="slide deck-after" id="_operatory_porównania" aria-hidden="true">
<div class="deck-slide-scaler" style="transform: scale(0.617195);"><h2>Operatory porównania</h2><table class="tableblock frame-all grid-all" style="width:100%">
<colgroup>
<col style="width:33.3333%">
<col style="width:33.3333%">
<col style="width:33.3334%">
</colgroup>
<tbody>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">=</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Sprawdza, czy argumenty po obu stronach są równe</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock"><code>a = b</code></p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">!=</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Sprawdza, czy argumenty po obu stronach są różne</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock"><code>a != b</code></p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">&lt;&gt;</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Sprawdza, czy argumenty po obu stronach są różne</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock"><code>a &lt;&gt; b</code></p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">&gt;</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Sprawdza, czy argument po lewej stronie są jest większy od argumentu po prawej stronie</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock"><code>a &gt; b</code></p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">&lt;</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Sprawdza, czy argument po lewej stronie są jest mniejszy od argumentu po prawej stronie</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock"><code>a &lt; b</code></p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">&gt;=</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Sprawdza, czy argument po lewej stronie są jest większy od lub równy argumentowi po prawej stronie</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock"><code>a &gt;= b</code></p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">&gt;=</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Sprawdza, czy argument po lewej stronie są jest mniejszy od lub równy argumentowi po prawej stronie</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock"><code>a &lt;= b</code></p></td>
</tr>
</tbody>
</table></div>

</section>
<section class="slide deck-after" id="_pozostałe_operatory" aria-hidden="true">
<div class="deck-slide-scaler" style="transform: scale(0.615523);"><h2>Pozostałe operatory</h2><table class="tableblock frame-all grid-all" style="width:100%">
<colgroup>
<col style="width:33.3333%">
<col style="width:33.3333%">
<col style="width:33.3334%">
</colgroup>
<tbody>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">AND</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Logiczna koniunkcja dwóch warunków.</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock"><code>a = b AND a &lt; c</code></p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">OR</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Logiczna alternatywa dwóch warunków.</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock"><code>a = 0 OR b = 0</code></p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">NOT</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Logiczna negacja warunku. Odwraca znaczenie operatora.</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock"><code>a IS NOT NULL</code></p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">BETWEEN</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Sprawdza, czy wartość znajduje się zakresie określonym przez argumenty.</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock"><code>a BETWEEN 10 AND 20</code></p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">IN</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Sprawdza, czy wartość znajduje się w zbiorze.</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock"><code>name IN ('Jan', 'Kazimierz')</code></p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">LIKE</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Sprawdza, czy tekst zgadza się ze wzorcem. Pozwala użyć wyrażeń wieloznacznych (ang. wildcards).</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock"><code>name LIKE 'Jan%'</code></p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">IS NULL</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Sprawdza, czy podana wartość nie jest NULLem</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock"><code>a IS NULL</code></p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">EXISTS</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Sprawdza, czy pewna wartość istnieje</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock"><code>EXISTS (SELECT AGE FROM CUSTOMERS WHERE SALARY &gt; 6500)</code></p></td>
</tr>
</tbody>
</table></div>

</section>
<section class="slide deck-after" id="_pozostałem_operatory" aria-hidden="true">
<div class="deck-slide-scaler"><h2>Pozostałem operatory</h2><table class="tableblock frame-all grid-all" style="width:100%">
<colgroup>
<col style="width:33.3333%">
<col style="width:33.3333%">
<col style="width:33.3334%">
</colgroup>
<tbody>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">ALL</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Służy do porównania wartości do wszystkich z podanego zbioru</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock"><code>AGE &gt; ANY (SELECT AGE FROM CUSTOMERS WHERE SALARY &gt; 6500)</code></p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">ANY</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Służy do porównania wartości do dowolnej z podanego zbioru</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock"><code>AGE &gt; ALL (SELECT AGE FROM CUSTOMERS WHERE SALARY &gt; 6500)</code></p></td>
</tr>
</tbody>
</table></div>

</section>
<section class="slide deck-after" id="_kwerendy_zapytania_select" aria-hidden="true">
<div class="deck-slide-scaler"><h2>Kwerendy (zapytania) - SELECT</h2><div class="ulist">
<ul>
<li class="slide deck-after" id="slide-91" aria-hidden="true">Słowo kluczowe <code>SELECT</code> używane jest do pobierania danych z bazy.</li>
<li class="slide deck-after" id="slide-92" aria-hidden="true">W najprostszej formie zapytanie może mieć następującą postać:</li>
</ul>
</div><div class="openblock slide deck-after" id="slide-93" aria-hidden="true">
<div class="content">
<div class="listingblock">
<div class="content">
<pre class="CodeRay"><code class="sql language-sql"><span class="class">SELECT</span> col1, col2, ..., colN <span class="keyword">FROM</span> table_name;
<span class="class">SELECT</span> * <span class="keyword">FROM</span> table_name;</code></pre>
</div>
</div>
</div>
</div><div class="ulist">
<ul>
<li class="slide deck-after" id="slide-94" aria-hidden="true">Użycie symbolu <code>*</code> powoduje pobranie wszystkich kolumn z tabeli.</li>
</ul>
</div></div>



</section>
<section class="slide deck-after" id="_kwerendy_zapytania" aria-hidden="true">
<div class="deck-slide-scaler" style="transform: scale(0.689585);"><h2>Kwerendy (zapytania)</h2><div class="ulist">
<div class="title"><code>SELECT DISTINCT</code></div>
<ul>
<li class="slide deck-after" id="slide-96" aria-hidden="true">Wybiera tylko niepowtarzające się się wiersze.</li>
</ul>
</div><div class="openblock slide deck-after" id="slide-97" aria-hidden="true">
<div class="content">
<div class="listingblock">
<div class="content">
<pre class="CodeRay"><code class="sql language-sql"><span class="class">SELECT</span> <span class="keyword">DISTINCT</span> col1, col2, ..., colN <span class="keyword">FROM</span> table_name;
<span class="class">SELECT</span> <span class="keyword">DISTINCT</span> * <span class="keyword">FROM</span> table_name;</code></pre>
</div>
</div>
</div>
</div><div class="ulist">
<div class="title"><code>WHERE</code></div>
<ul>
<li class="slide deck-after" id="slide-98" aria-hidden="true">Pozwala na tworzenie warunków jakie musi spełniać wynikowy zestaw danych.</li>
<li class="slide deck-after" id="slide-99" aria-hidden="true">Można w nich używać omówionych wcześniej operatorów.</li>
</ul>
</div><div class="openblock slide deck-after" id="slide-100" aria-hidden="true">
<div class="content">
<div class="listingblock">
<div class="content">
<pre class="CodeRay"><code class="sql language-sql"><span class="class">SELECT</span> product_name, list_price
<span class="keyword">FROM</span> products
<span class="keyword">WHERE</span> list_price &gt; <span class="integer">20</span> <span class="keyword">AND</span> discontinued = <span class="predefined-constant">false</span>;</code></pre>
</div>
</div>
</div>
</div><div class="openblock slide deck-after" id="slide-101" aria-hidden="true">
<div class="content">
<div class="listingblock">
<div class="content">
<pre class="CodeRay"><code class="sql language-sql"><span class="class">SELECT</span> product_name, list_price
<span class="keyword">FROM</span> products
<span class="keyword">WHERE</span> list_price &gt; <span class="integer">20</span> <span class="keyword">AND</span> discontinued = <span class="predefined-constant">false</span>;</code></pre>
</div>
</div>
</div>
</div></div>





</section>
<section class="slide deck-after" id="_ograniczanie_listy_wyników_limit" aria-hidden="true">
<div class="deck-slide-scaler"><h2>Ograniczanie listy wyników - LIMIT</h2><div class="openblock slide deck-after" id="slide-103" aria-hidden="true">
<div class="content">
<div class="listingblock">
<div class="content">
<pre class="CodeRay"><code class="sql language-sql"><span class="class">SELECT</span> id, product_name <span class="keyword">FROM</span> products LIMIT <span class="integer">10</span>;</code></pre>
</div>
</div>
</div>
</div><div class="ulist">
<ul>
<li class="slide deck-after" id="slide-104" aria-hidden="true">Wyświetli pierwsze 10 wyników zapytania.</li>
</ul>
</div><div class="openblock slide deck-after" id="slide-105" aria-hidden="true">
<div class="content">
<div class="listingblock">
<div class="content">
<pre class="CodeRay"><code class="sql language-sql"><span class="class">SELECT</span> id, product_name <span class="keyword">FROM</span> products LIMIT <span class="integer">10</span>, <span class="integer">20</span>;</code></pre>
</div>
</div>
</div>
</div><div class="ulist">
<ul>
<li class="slide deck-after" id="slide-106" aria-hidden="true">Wyświetli 20 wyników zapytania począwszy od 11.</li>
</ul>
</div></div>




</section>
<section class="slide deck-after" id="_sortowanie_wyników_order_by" aria-hidden="true">
<div class="deck-slide-scaler" style="transform: scale(0.885714);"><h2>Sortowanie wyników - ORDER BY</h2><div class="openblock slide deck-after" id="slide-108" aria-hidden="true">
<div class="content">
<div class="listingblock">
<div class="content">
<pre class="CodeRay"><code class="sql language-sql"><span class="class">SELECT</span> * <span class="keyword">FROM</span> employees <span class="keyword">ORDER</span> <span class="keyword">BY</span> city;
<span class="class">SELECT</span> * <span class="keyword">FROM</span> employees <span class="keyword">ORDER</span> <span class="keyword">BY</span> city <span class="directive">ASC</span>;
<span class="class">SELECT</span> * <span class="keyword">FROM</span> employees <span class="keyword">ORDER</span> <span class="keyword">BY</span> city <span class="directive">DESC</span>;
<span class="class">SELECT</span> * <span class="keyword">FROM</span> employees <span class="keyword">ORDER</span> <span class="keyword">BY</span> state_province, city;</code></pre>
</div>
</div>
</div>
</div><div class="ulist">
<ul>
<li class="slide deck-after" id="slide-109" aria-hidden="true">Domyślnie wyniki sortowane są w porządku rosnącym.</li>
<li class="slide deck-after" id="slide-110" aria-hidden="true"><p>
Można zaznaczyć porządek sortowania jawnie poprzez dodanie odpowiedniej instrukcji po <code>ORDER BY</code>:</p><div class="ulist">
<ul>
<li><code>ASC</code> - sortowanie w porządku rosnącym (domyślnie)</li>
<li><code>DESC</code> - sortowanie w porządku malejącym</li>
</ul>
</div><p></p></li>
<li class="slide deck-after" id="slide-111" aria-hidden="true">Można sortować wyniki po więcej niż jednej kolumnie.</li>
</ul>
</div></div>


</section>
<section class="slide deck-after" id="_grupowanie_i_agregacja_group_by" aria-hidden="true">
<div class="deck-slide-scaler" style="transform: scale(0.813842);"><h2>Grupowanie i agregacja - GROUP BY</h2><div class="openblock slide deck-after" id="slide-113" aria-hidden="true">
<div class="content">
<div class="listingblock">
<div class="content">
<pre class="CodeRay"><code class="sql language-sql"><span class="class">SELECT</span> state_province, <span class="predefined">COUNT</span>(*) <span class="keyword">FROM</span> customers <span class="keyword">GROUP</span> <span class="keyword">BY</span> state_province;</code></pre>
</div>
</div>
</div>
</div><div class="ulist">
<ul>
<li class="slide deck-after" id="slide-114" aria-hidden="true">Po słowach kluczowych <code>GROUP BY</code> występuje lista kolumn po których należy pogrupować wyniki.</li>
<li class="slide deck-after" id="slide-115" aria-hidden="true">Lista kolumn po słowie kluczowym <code>SELECT</code> może zawierać jedynie kolumny zgrupowane lub zagregowane.</li>
</ul>
</div><div class="ulist">
<div class="title">Przydatne funkcje agregujące:</div>
<ul>
<li class="slide deck-after" id="slide-116" aria-hidden="true">COUNT - zlicza elementy podane jako argument.</li>
<li class="slide deck-after" id="slide-117" aria-hidden="true">AVG - oblicza średnią arytmetyczną z wartości kolumny podanej jako argument.</li>
<li class="slide deck-after" id="slide-118" aria-hidden="true">MAX - oblicza wartość maksymalną z wartości kolumny podanej jako argument.</li>
<li class="slide deck-after" id="slide-119" aria-hidden="true">MIN - oblicza wartość minimalną z wartości kolumny podanej jako argument.</li>
<li class="slide deck-after" id="slide-120" aria-hidden="true">SUM - oblicza sumę wartości kolumny podanej jako argument.</li>
</ul>
</div></div>



</section>
<section class="slide deck-after" id="_grupowanie_i_agregacja_group_by_2" aria-hidden="true">
<div class="deck-slide-scaler"><h2>Grupowanie i agregacja - GROUP BY</h2><div class="openblock slide deck-after" id="slide-122" aria-hidden="true">
<div class="content">
<div class="listingblock">
<div class="content">
<pre class="CodeRay"><code class="sql language-sql"><span class="class">SELECT</span> customer_id, <span class="predefined">MIN</span>(shipping_fee) <span class="keyword">as</span> sp, <span class="predefined">COUNT</span>(*)
<span class="keyword">FROM</span> orders
<span class="keyword">GROUP</span> <span class="keyword">BY</span> customer_id <span class="keyword">HAVING</span> sp &gt; <span class="integer">0</span>;</code></pre>
</div>
</div>
</div>
</div><div class="ulist">
<ul>
<li class="slide deck-after" id="slide-123" aria-hidden="true">Słowo kluczowe <code>HAVING</code> filtruje wyniki dla grup.</li>
<li class="slide deck-after" id="slide-124" aria-hidden="true">Musi występować po <code>GROUP BY</code>, ale przed <code>ORDER BY</code></li>
</ul>
</div></div>


</section>
<section class="slide deck-after" id="_złączenia_join" aria-hidden="true">
<div class="deck-slide-scaler" style="transform: scale(0.471972);"><h2>Złączenia - JOIN</h2><div class="ulist">
<ul>
<li class="slide deck-after" id="slide-126" aria-hidden="true">Złączenia pozwalają łączyć pola z dwóch lub więcej tabel w jednym zapytaniu.</li>
<li class="slide deck-after" id="slide-127" aria-hidden="true">Rozróżniamy różne typy złączeń:</li>
</ul>
</div><div class="openblock slide deck-after" id="slide-128" aria-hidden="true">
<div class="content">
<div class="listingblock">
<div class="content">
<pre class="CodeRay"><code class="sql language-sql"><span class="class">SELECT</span> * <span class="keyword">FROM</span> orders <span class="keyword">as</span> o <span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> order_details <span class="keyword">as</span> od <span class="keyword">ON</span> o.id = od.order_id;
<span class="class">SELECT</span> o.id, od.id <span class="keyword">FROM</span> orders <span class="keyword">as</span> o <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> order_details <span class="keyword">as</span> od <span class="keyword">ON</span> o.id = od.order_id;
<span class="class">SELECT</span> o.id, od.id <span class="keyword">FROM</span> orders <span class="keyword">as</span> o <span class="keyword">INNER</span> <span class="keyword">JOIN</span> order_details <span class="keyword">as</span> od <span class="keyword">ON</span> o.id = od.order_id;
<span class="class">SELECT</span> * <span class="keyword">FROM</span> orders <span class="keyword">as</span> o CROSS <span class="keyword">JOIN</span> order_details <span class="keyword">as</span> od;</code></pre>
</div>
</div>
</div>
</div><div class="ulist">
<ul>
<li class="slide deck-after" id="slide-129" aria-hidden="true"><p>
<code>INNER JOIN</code> - zawiera wiersze, które występują w obu tabelach</p><div class="ulist">
<ul>
<li>Pola występujące tylko w jednej z tabel nie są wyświetlane.</li>
</ul>
</div><p></p></li>
<li class="slide deck-after" id="slide-130" aria-hidden="true"><p>
<code>LEFT JOIN</code> - zawiera <strong>wszyskie</strong> wiersze z tabeli lewej oraz odpowiadające im wiersze z tabeli prawej</p><div class="ulist">
<ul>
<li>W przypadku braku dopasowania w tabeli prawej kolumny mają wartość <code>NULL</code>.</li>
</ul>
</div><p></p></li>
<li class="slide deck-after" id="slide-131" aria-hidden="true"><p>
<code>RIGHT JOIN</code> - zawiera <strong>wszyskie</strong> wiersze z tabeli prawej oraz odpowiadające im wiersze z tabeli lewej</p><div class="ulist">
<ul>
<li>W przypadku braku dopasowania w tabeli lewej kolumny mają wartość <code>NULL</code>.</li>
</ul>
</div><p></p></li>
<li class="slide deck-after" id="slide-132" aria-hidden="true"><p>
<code>FULL OUTER JOIN</code> - zawiera wiersze jeśli występujące w przynajmniej jednej tabeli.</p><div class="ulist">
<ul>
<li>W przypadku braku dopasowania w drugiej w brakujących kolumnach pojawiają się wartości <code>NULL</code>.</li>
</ul>
</div><p></p></li>
<li class="slide deck-after" id="slide-133" aria-hidden="true"><code>CROSS JOIN</code> - iloczyn kartezjański danych z obu tabel.</li>
</ul>
</div></div>



</section>
<section class="slide deck-after" id="_obsługa_mysql_w_pythone" aria-hidden="true">
<div class="deck-slide-scaler" style="transform: scale(0.874359);"><h2>Obsługa MySQL w Pythone</h2><div class="ulist">
<ul>
<li class="slide deck-after" id="slide-135" aria-hidden="true">Do obsługi MySQL z poziomu języka Python służy pakiet mysqlclient.</li>
<li class="slide deck-after" id="slide-136" aria-hidden="true">Powstał jako gałąź powszechnie używanego modułu MySQL-python, który przestał być rozwijany.</li>
<li class="slide deck-after" id="slide-137" aria-hidden="true"><p>
Jest zgodny ze specyfikacją DB-API 2.0 (PEP-249)</p><div class="ulist">
<ul>
<li>Specyfikacja określa API dla pakietów obsługujących bazy danych z poziomu języka Python</li>
<li>Została stworzona celem unifikacji dostępu różnych silników baz danych.</li>
</ul>
</div><p></p></li>
<li class="slide deck-after" id="slide-138" aria-hidden="true"><p>
Posiada dwa główne moduły:</p><div class="ulist">
<ul>
<li>Niskopoziomowy <code>_mysql</code></li>
<li>Wysokopoziomowy <code>MySQLdb</code> (zgodny z DB-API 2.0) - cienki wrapper na <code>_mysql</code></li>
</ul>
</div><p></p></li>
</ul>
</div></div>

</section>
<section class="slide deck-after" id="_połączenie" aria-hidden="true">
<div class="deck-slide-scaler"><h2>Połączenie</h2><div class="ulist">
<ul>
<li class="slide deck-after" id="slide-140" aria-hidden="true">Do połączenia do bazy danych służy metoda <code>connect()</code></li>
<li class="slide deck-after" id="slide-141" aria-hidden="true"><p>
Najważniejsze parametry:</p><div class="ulist">
<ul>
<li><code>host</code> - nazwa hosta do którego należy się podłączyć.</li>
<li><code>user</code> - nazwa użytkownika bazy danych.</li>
<li><code>passwd</code> - hasło do bazy danych. (Domyślnie: bez hasła)</li>
<li><code>db</code> - Nazwa bazy danych do której chcemy się podłączyć bezpośrednio po połączeniu. (Domyślnie: brak)</li>
<li><code>port</code> - Port TCP na którym nasłuchuje serwer MySQL. (Domyślnie: 3306)</li>
</ul>
</div><p></p></li>
</ul>
</div></div>

</section>
<section class="slide deck-after" id="_połączenie_2" aria-hidden="true">
<div class="deck-slide-scaler" style="transform: scale(0.589965);"><h2>Połączenie</h2><div class="ulist">
<ul>
<li class="slide deck-after" id="slide-143" aria-hidden="true">Po nazwiązaniu połączenia tworzony zwracany jest obiekt <code>connection</code>.</li>
<li class="slide deck-after" id="slide-144" aria-hidden="true"><p>
Obiekt ten posiada następujące metody:</p><div class="ulist">
<ul>
<li><p>
<code>commit()</code></p><div class="ulist">
<ul>
<li>Jeśli baza danych oraz tabele wspierają transakcyjność wtedy metoda wykona polecenie <code>COMMIT</code>.</li>
<li>Jeśli baza danych lub tabele nie wspierają transakcyjności wtedy metoda nie zwraca nic i zawsze kończy się bezbłędnie.</li>
</ul>
</div><p></p></li>
<li><p>
<code>rollback()</code></p><div class="ulist">
<ul>
<li>Jeśli baza danych oraz tabele wspierają transakcyjność wtedy metoda wykona polecenie <code>ROLLBACK</code> dla bieżącej transakcji.</li>
<li>Jeśli baza danych lub tabele nie wspierają transakcyjności wtedy metoda zgłasza wyjątek <code>NotSupportedError</code>.</li>
</ul>
</div><p></p></li>
<li><p>
<code>cursor([cursorclass])</code></p><div class="ulist">
<ul>
<li>MySQL nie wspiera mechanizmu kursorów, ale <code>mysqlclient</code> emuluje je.</li>
<li>Parametrem opcjonalnym może być klasa implementująca własną obsługę kursora.</li>
</ul>
</div><p></p></li>
</ul>
</div><p></p></li>
</ul>
</div></div>

</section>
<section class="slide deck-after" id="_obiekt_cursor" aria-hidden="true">
<div class="deck-slide-scaler" style="transform: scale(0.725532);"><h2>Obiekt Cursor</h2><div class="ulist">
<ul>
<li class="slide deck-after" id="slide-146" aria-hidden="true"><p>
<code>callproc(procname, args)</code></p><div class="ulist">
<ul>
<li>Wyołuje procedurę składowaną o podanej nazwie z podanymi argumentami.</li>
<li>Samo wywłoanie procedury nie zwraca wyników, konieczne jest wywołanie <code>nextreset()</code>.</li>
</ul>
</div><p></p></li>
<li class="slide deck-after" id="slide-147" aria-hidden="true"><p>
<code>close()</code></p><div class="ulist">
<ul>
<li>Zamyka kursor.</li>
<li>Kolejne odwołanie do zamknięte kursora spowoduje zgłosznie wyjątku <code>ProgrammingError</code>.</li>
</ul>
</div><p></p></li>
<li class="slide deck-after" id="slide-148" aria-hidden="true"><p>
<code>nextset()</code></p><div class="ulist">
<ul>
<li>Przemieszcza kursor do kolejnego zestawu wyników (ang. result set).</li>
<li>W przypadku braku kolejnego zestawu wyników zwraca wartość None.</li>
<li>Wielokrotne zestawy wyników są wspierane od MySQL w wersji 4.1.</li>
</ul>
</div><p></p></li>
</ul>
</div></div>

</section>
<section class="slide deck-after" id="_wykonanie_zapytania" aria-hidden="true">
<div class="deck-slide-scaler" style="transform: scale(0.694501);"><h2>Wykonanie zapytania</h2><div class="listingblock">
<div class="content">
<pre class="CodeRay"><code class="python language-python"><span class="keyword">import</span> <span class="include">MySQLdb</span>
db = MySQLdb.connect(host=<span class="string"><span class="delimiter">'</span><span class="content">192.168.56.101</span><span class="delimiter">'</span></span>,user=<span class="string"><span class="delimiter">'</span><span class="content">mg</span><span class="delimiter">'</span></span>,passwd=<span class="string"><span class="delimiter">"</span><span class="content">SECRET</span><span class="delimiter">"</span></span>,db=<span class="string"><span class="delimiter">"</span><span class="content">northwind</span><span class="delimiter">"</span></span>)
c = db.cursor()
country = <span class="string"><span class="delimiter">'</span><span class="content">USA</span><span class="delimiter">'</span></span>
c.execute(<span class="string"><span class="delimiter">"""</span><span class="content">SELECT state_province, COUNT(*)</span><span class="content">
</span><span class="content">             FROM customers WHERE country_region = %s GROUP BY state_province</span><span class="delimiter">"""</span></span>, (country, ))
results = c.fetchall()
c.close()</code></pre>
</div>
</div><div class="ulist">
<ul>
<li class="slide deck-after" id="slide-150" aria-hidden="true">Obiekt <code>db</code> jest odpowiedzialny za połączenie z bazą danych.</li>
<li class="slide deck-after" id="slide-151" aria-hidden="true">Obiekt <code>c</code> jest kursorem: pozwala wykonywać zapytania i zbierać wyniki</li>
<li class="slide deck-after" id="slide-152" aria-hidden="true">Metoda <code>execute()</code>, pozwala na podstawianie parametrów w zapytaniu.</li>
<li class="slide deck-after" id="slide-153" aria-hidden="true"><p>
Metoda <code>fetchall()</code> pobiera wszystkie, albo wszystkie pozostałe wyniki zapytania.</p><div class="ulist">
<ul>
<li>Dla standardowego kursora zwraca listę krotek.</li>
</ul>
</div><p></p></li>
</ul>
</div></div>


</section>
<section class="slide deck-after" id="_pobieranie_danych" aria-hidden="true">
<div class="deck-slide-scaler"><h2>Pobieranie danych</h2><div class="paragraph"><p>Kursor posiada następujące metody.</p></div><div class="ulist">
<div class="title"><code>fetchone()</code></div>
<ul>
<li class="slide deck-after" id="slide-155" aria-hidden="true">Pobiera jeden rekord.</li>
</ul>
</div><div class="ulist">
<div class="title"><code>fetchmany(n)</code></div>
<ul>
<li class="slide deck-after" id="slide-156" aria-hidden="true">Pobiera n rekordów.</li>
</ul>
</div><div class="ulist">
<div class="title"><code>fetchall()</code></div>
<ul>
<li class="slide deck-after" id="slide-157" aria-hidden="true">Pobiera wszystkie rekordy jeśli wcześniej nie były pobrane.</li>
<li class="slide deck-after" id="slide-158" aria-hidden="true">Pobiera pozostałe rekordy jeśli wcześniej jakieś zostały pobrane.</li>
</ul>
</div></div>




</section>
<section class="slide deck-after" id="_mysql_store_result_vs_mysql_use_result" aria-hidden="true">
<div class="deck-slide-scaler"><h2>mysql_store_result() vs. mysql_use_result()</h2><div class="ulist">
<div class="title">mysql_store_result()</div>
<ul>
<li class="slide deck-after" id="slide-160" aria-hidden="true">Pobiera wyniki z serwera na lokalną maszynę</li>
</ul>
</div><div class="ulist">
<div class="title">mysql_use_result()</div>
<ul>
<li class="slide deck-after" id="slide-161" aria-hidden="true">Pozostawia wyniki zapytania na serwerze i daje możliwość pobierania ich jeden po drugim.</li>
<li class="slide deck-after" id="slide-162" aria-hidden="true">Sprawdza się przy większych zestawach danych.</li>
<li class="slide deck-after" id="slide-163" aria-hidden="true">W tym przypadku, kolejne zapytanie nie może być obsłużone przez serwer dopóki wszystkie wyniki nie zostaną pobrane.</li>
</ul>
</div></div>


</section>
<section class="slide deck-after" id="_typy_kursorów" aria-hidden="true">
<div class="deck-slide-scaler"><h2>Typy kursorów</h2><div class="ulist">
<div class="title"><code>Cursor</code></div>
<ul>
<li class="slide deck-after" id="slide-165" aria-hidden="true">Kursor domyślny.</li>
<li class="slide deck-after" id="slide-166" aria-hidden="true">Używa funkcji <code>mysql_store_result()</code> do pobierania danych.</li>
<li class="slide deck-after" id="slide-167" aria-hidden="true">Zwraca wiersze z bazy jako krotki.</li>
</ul>
</div><div class="ulist">
<div class="title"><code>DictCursor</code></div>
<ul>
<li class="slide deck-after" id="slide-168" aria-hidden="true">Działa podobnie jak kursor domyślny, ale zwraca wiersze jako słowniki.</li>
<li class="slide deck-after" id="slide-169" aria-hidden="true">Kluczem jest nazwa kolumny.</li>
</ul>
</div></div>


</section>
<section class="slide deck-after" id="_typy_kursorów_2" aria-hidden="true">
<div class="deck-slide-scaler" style="transform: scale(0.955182);"><h2>Typy kursorów</h2><div class="ulist">
<div class="title"><code>SSCursor</code></div>
<ul>
<li class="slide deck-after" id="slide-171" aria-hidden="true"><p>
Używa funkcji <code>mysql_use_result()</code> do pobierania danych.</p><div class="ulist">
<ul>
<li>Dane składowane są po stronie serwera i pobierane wiersz po wierszu.</li>
</ul>
</div><p></p></li>
<li class="slide deck-after" id="slide-172" aria-hidden="true">Zwraca wiersze jako krotki.</li>
</ul>
</div><div class="ulist">
<div class="title"><code>SSDictCursor</code></div>
<ul>
<li class="slide deck-after" id="slide-173" aria-hidden="true"><p>
Używa funkcji <code>mysql_use_result()</code> do pobierania danych.</p><div class="ulist">
<ul>
<li>Dane składowane są po stronie serwera i pobierane wiersz po wierszu.</li>
</ul>
</div><p></p></li>
<li class="slide deck-after" id="slide-174" aria-hidden="true">Zwraca wiersze jako słowniki.</li>
</ul>
</div></div>


</section>
<section class="slide deck-after" id="_kursor_jako_iterator" aria-hidden="true">
<div class="deck-slide-scaler"><h2>Kursor jako iterator</h2><div class="listingblock">
<div class="content">
<pre class="CodeRay"><code class="python language-python"><span class="keyword">import</span> <span class="include">MySQLdb</span>
<span class="keyword">import</span> <span class="include">MySQLdb.cursors</span>
db = MySQLdb.connect(
     host=<span class="string"><span class="delimiter">'</span><span class="content">192.168.56.101</span><span class="delimiter">'</span></span>,user=<span class="string"><span class="delimiter">'</span><span class="content">mg</span><span class="delimiter">'</span></span>,passwd=<span class="string"><span class="delimiter">"</span><span class="content">SECRET</span><span class="delimiter">"</span></span>,db=<span class="string"><span class="delimiter">"</span><span class="content">northwind</span><span class="delimiter">"</span></span>,
     cursorclass = MySQLdb.cursors.SSCursor)
c = connection.cursor()
c.execute(query)

<span class="keyword">for</span> row <span class="keyword">in</span> cursor:
    print(row)</code></pre>
</div>
</div></div>

</section>
<p aria-role="status" class="deck-status">
<span class="deck-status-current">1</span>
/
<span class="deck-status-total">46</span>
</p>
<form action="file:///Users/lukasz/Downloads/python_sql/" class="goto-form" method="get">
<label for="goto-slide">Go to Slide:</label>
<input id="goto-slide" list="goto-datalist" name="slidenum" type="text">
<datalist id="goto-data-list"></datalist>
<input type="submit" value="Go">
</form>
</div>
<script src="./jquery.min.js"></script>
<script src="./deck.core.js"></script>
<script src="./deck.scale.js"></script>
<script src="file:///Users/lukasz/Downloads/python_sql/deck.js/extensions/blank/deck.blank.js"></script>
<script src="./deck.goto.js"></script>
<script src="./deck.menu.js"></script>
<script src="./deck.split.js"></script>
<script src="./deck.status.js"></script>
<script>
  (function($, deck, undefined) {
    $.deck.defaults.keys['previous'] = [8, 33, 37, 39];
    $.deck.defaults.keys['next'] = [13, 32, 34, 39];
  
    $.extend(true, $[deck].defaults, {
        countNested: false
    });
  
    $.deck('.slide');
  })(jQuery, 'deck');
</script>
<style>
  .slide.canvas-image {
  -moz-background-size: cover;
  -webkit-background-size: cover;
  -o-background-size: cover;
  background-size: cover;
  display: -moz-box;
  display: -webkit-box;
  display: -ms-box;
  display: box;
  -moz-box-orient: vertical;
  -webkit-box-orient: vertical;
  -ms-box-orient: vertical;
  box-orient: vertical;
  -moz-box-align: start;
  -webkit-box-align: start;
  -ms-box-align: start;
  box-align: start;
  -moz-box-pack: start;
  -webkit-box-pack: start;
  -ms-box-pack: start;
  box-pack: start;}
  
  .bottom-left {
    left: 1%;
    bottom: 20%; }
  
  .top-left {
    left: 1%;
    top: 20%; }
  
  .bottom-right {
    right: 1%;
    bottom: 20%; }
  
  .top-right {
    right: 1%;
    top: 20%; }
  
  .center-up {
    right: 50%;
    top: 1%;
  }
  
  .center-down {
    right: 50%;
    bottom: 1%;
  }
  .canvas-image .canvas-caption p {
    text-align: center;
    padding-top: 0;
    padding: 0;
    -moz-transform: none;
    -webkit-transform: none;
    -o-transform: none;
    -ms-transform: none;
    transform: none;
    display: inline;
    position: absolute;
    background-color: rgba(0, 0, 0, 0.7);
    font-weight: bold;
    font-size: 58px;
    -webkit-box-shadow: 2px 2px 2px #000;
    -moz-box-shadow: 2px 2px 2px #000;
    box-shadow: 2px 2px 2px #000;
    padding: 1rem;
    color: white; }
  kbd.keyseq { color: #555555; }
  kbd:not(.keyseq) {
    display: inline-block;
    color: #222222;
    font-size: 0.7em;
    line-height: 1.4;
    background-color: #F7F7F7;
    border: 1px solid #ccc;
    -webkit-border-radius: 3px;
    border-radius: 3px;
    -webkit-box-shadow: 0 1px 0 rgba(0, 0, 0, 0.2), 0 0 0 2px white inset;
    box-shadow: 0 1px 0 rgba(0, 0, 0, 0.2), 0 0 0 2px white inset;
    margin: -0.15em 0.15em 0 0.15em;
    padding: 0.2em 0.6em;
    vertical-align: middle;
    white-space: nowrap;
  }
  kbd kbd:first-child { margin-left: 0; }
  kbd kbd:last-child { margin-right: 0; }
</style>

</body></html>